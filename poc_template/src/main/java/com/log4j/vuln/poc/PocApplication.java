package com.log4j.vuln.poc;

import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;


import org.apache.logging.log4j.core.config.DefaultConfiguration;
import org.apache.logging.log4j.core.config.Configurator;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.ThreadContext;


public class PocApplication {
	private static final Logger logger = LogManager.getLogger("PocApplication");
    public static void main(String[] args) throws Exception {
		Configurator.initialize(new DefaultConfiguration());
		Configurator.setRootLevel(Level.INFO);

		System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "true");
		//System.setProperty("com.sun.jndi.rmiobject.trustURLCodebase", "false");
		//System.setProperty("com.sun.jndi.cosnaming.object.trustURLCodebase", "false");
		System.out.println(System.getProperty("com.sun.jndi.ldap.object.trustURLCodebase"));
		System.out.println(System.getProperty("com.sun.jndi.rmi.object.trustURLCodebase"));
		System.out.println(System.getProperty("com.sun.jndi.cosnaming.object.trustURLCodebase"));

        HttpServer server = HttpServer.create(new InetSocketAddress(8080), 0);
        server.createContext("/2021-44228-via-message", new MyHandler());
		server.createContext("/", new MyHandler());
        server.setExecutor(null); // creates a default executor
        server.start();
    }

    static class MyHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange t) throws IOException {
            String response = "This is the response";
            t.sendResponseHeaders(200, response.length());
            OutputStream os = t.getResponseBody();
			logger.info(t.getRequestHeaders().get("User-Agent"));
            os.write(response.getBytes());
            os.close();
			logger.info("The payload should have been triggered by now");
			
			
        }
    }

}
