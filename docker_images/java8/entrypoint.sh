#!/bin/sh

set -x
echo "Removing default log4j jars."
find / -name "log4j*.jar" -print0 | xargs -0 rm
# rm /root/.m2/repository/org/apache/logging/log4j/log4j-*/2.15.0/log4j-*-2.15.0.jar

if [ "$DISABLE_TRUST_URL" == "True" ]; then
    sed -i "s/trustURLCodebase\", \"true\"/trustURLCodebase\", \"false\"/g" /app_source/src/main/java/com/log4j/vuln/poc/PocApplication.java
fi

sed "s/{{LOG4J_VERSION}}/$LOG4J_VERSION/g" /app_source/pom.xml.template > /app_source/pom.xml
mvn clean package -q -f /app_source/pom.xml -Dmaven.test.skip
rm -rf /root/.m2/
jar tf /app_source/target/poc-0.0.1-SNAPSHOT.jar
#rm /root/.m2/repository/log4j/log4j/1.2.12/log4j-1.2.12.jar
if [ "$REMOVE_JNDI_LOOKUP_CLASS" == "True" ]; then
    echo "Removing the jndi lookup cla ss from the log4j jar."
    ls /app_source/target/dependency-jars/log4j-core-*.jar
    echo "looking for jndiLookup class before deleting it"
    jar tf /app_source/target/dependency-jars/log4j-core-*.jar | grep -i jndilookup
    zip -q -d /app_source/target/dependency-jars/log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class
    echo "looking for jndiLookup class after deleting it"
    jar tf /app_source/target/dependency-jars/log4j-core-*.jar | grep -i jndilookup
fi
echo "Installed new customs log4j jars"
find / -name "log4j*.jar"
if [ "$DISABLE_MESSAGE_LOOKUP" == "True" ]; then
    java -Dlog4j2.configuration=/app_source/src/main/resources/log4j2.properties -Dlog4j2.formatMsgNoLookups=True -jar /app_source/target/poc-0.0.1-SNAPSHOT.jar
else
    java -Dlog4j2.configuration=/app_source/src/main/resources/log4j2.properties -jar /app_source/target/poc-0.0.1-SNAPSHOT.jar
fi
